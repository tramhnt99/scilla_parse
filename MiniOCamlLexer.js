// Generated from MiniOCaml.g4 by ANTLR 4.9
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u00022\u0117\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#",
    "\t#\u0004$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004",
    "*\t*\u0004+\t+\u0004,\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u0004",
    "1\t1\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003",
    "\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003",
    "\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003",
    "\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\f\u0003",
    "\f\u0003\f\u0003\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000e",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013",
    "\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0015",
    "\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0017",
    "\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u001a",
    "\u0003\u001a\u0003\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001c\u0006\u001c\u00aa\n\u001c\r\u001c\u000e\u001c\u00ab\u0003",
    "\u001d\u0006\u001d\u00af\n\u001d\r\u001d\u000e\u001d\u00b0\u0003\u001e",
    "\u0006\u001e\u00b4\n\u001e\r\u001e\u000e\u001e\u00b5\u0003\u001e\u0003",
    "\u001e\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003 \u0003",
    " \u0007 \u00c0\n \f \u000e \u00c3\u000b \u0003 \u0003 \u0003!\u0006",
    "!\u00c8\n!\r!\u000e!\u00c9\u0003!\u0003!\u0007!\u00ce\n!\f!\u000e!\u00d1",
    "\u000b!\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003",
    "\"\u0003\"\u0005\"\u00dc\n\"\u0003#\u0003#\u0003#\u0003$\u0003$\u0003",
    "$\u0003$\u0003$\u0003%\u0003%\u0003%\u0003%\u0003%\u0003&\u0003&\u0003",
    "&\u0003&\u0003\'\u0003\'\u0003\'\u0003(\u0003(\u0003(\u0003)\u0003)",
    "\u0003)\u0003)\u0003*\u0003*\u0003*\u0003+\u0003+\u0003+\u0003+\u0003",
    ",\u0003,\u0003-\u0003-\u0003.\u0003.\u0003/\u0003/\u0003/\u0003/\u0003",
    "/\u0003/\u00030\u00030\u00030\u00030\u00030\u00031\u00031\u00071\u0113",
    "\n1\f1\u000e1\u0116\u000b1\u0002\u00022\u0003\u0003\u0005\u0004\u0007",
    "\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017",
    "\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014",
    "\'\u0015)\u0016+\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d9\u001e",
    ";\u001f= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]0_1a2\u0003\u0002\t\u0003",
    "\u00022;\u0003\u0002\"\"\u0004\u0002\u000b\f\u000f\u000f\u0004\u0002",
    "++__\u0005\u0002\f\f\u000f\u000f$$\u0004\u0002aac|\u0006\u00022;C\\",
    "aac|\u0002\u011e\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003",
    "\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003",
    "\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003",
    "\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003",
    "\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003",
    "\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003",
    "\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003",
    "\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003",
    "\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002",
    "\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002",
    "\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002\u0002",
    "\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002\u0002",
    "3\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002\u0002\u00027\u0003",
    "\u0002\u0002\u0002\u00029\u0003\u0002\u0002\u0002\u0002;\u0003\u0002",
    "\u0002\u0002\u0002=\u0003\u0002\u0002\u0002\u0002?\u0003\u0002\u0002",
    "\u0002\u0002A\u0003\u0002\u0002\u0002\u0002C\u0003\u0002\u0002\u0002",
    "\u0002E\u0003\u0002\u0002\u0002\u0002G\u0003\u0002\u0002\u0002\u0002",
    "I\u0003\u0002\u0002\u0002\u0002K\u0003\u0002\u0002\u0002\u0002M\u0003",
    "\u0002\u0002\u0002\u0002O\u0003\u0002\u0002\u0002\u0002Q\u0003\u0002",
    "\u0002\u0002\u0002S\u0003\u0002\u0002\u0002\u0002U\u0003\u0002\u0002",
    "\u0002\u0002W\u0003\u0002\u0002\u0002\u0002Y\u0003\u0002\u0002\u0002",
    "\u0002[\u0003\u0002\u0002\u0002\u0002]\u0003\u0002\u0002\u0002\u0002",
    "_\u0003\u0002\u0002\u0002\u0002a\u0003\u0002\u0002\u0002\u0003c\u0003",
    "\u0002\u0002\u0002\u0005f\u0003\u0002\u0002\u0002\u0007h\u0003\u0002",
    "\u0002\u0002\tj\u0003\u0002\u0002\u0002\u000bl\u0003\u0002\u0002\u0002",
    "\ro\u0003\u0002\u0002\u0002\u000fq\u0003\u0002\u0002\u0002\u0011s\u0003",
    "\u0002\u0002\u0002\u0013u\u0003\u0002\u0002\u0002\u0015w\u0003\u0002",
    "\u0002\u0002\u0017{\u0003\u0002\u0002\u0002\u0019~\u0003\u0002\u0002",
    "\u0002\u001b\u0081\u0003\u0002\u0002\u0002\u001d\u0084\u0003\u0002\u0002",
    "\u0002\u001f\u0087\u0003\u0002\u0002\u0002!\u0089\u0003\u0002\u0002",
    "\u0002#\u008c\u0003\u0002\u0002\u0002%\u008e\u0003\u0002\u0002\u0002",
    "\'\u0091\u0003\u0002\u0002\u0002)\u0093\u0003\u0002\u0002\u0002+\u0096",
    "\u0003\u0002\u0002\u0002-\u0099\u0003\u0002\u0002\u0002/\u009c\u0003",
    "\u0002\u0002\u00021\u009e\u0003\u0002\u0002\u00023\u00a1\u0003\u0002",
    "\u0002\u00025\u00a4\u0003\u0002\u0002\u00027\u00a9\u0003\u0002\u0002",
    "\u00029\u00ae\u0003\u0002\u0002\u0002;\u00b3\u0003\u0002\u0002\u0002",
    "=\u00b9\u0003\u0002\u0002\u0002?\u00bd\u0003\u0002\u0002\u0002A\u00c7",
    "\u0003\u0002\u0002\u0002C\u00db\u0003\u0002\u0002\u0002E\u00dd\u0003",
    "\u0002\u0002\u0002G\u00e0\u0003\u0002\u0002\u0002I\u00e5\u0003\u0002",
    "\u0002\u0002K\u00ea\u0003\u0002\u0002\u0002M\u00ee\u0003\u0002\u0002",
    "\u0002O\u00f1\u0003\u0002\u0002\u0002Q\u00f4\u0003\u0002\u0002\u0002",
    "S\u00f8\u0003\u0002\u0002\u0002U\u00fb\u0003\u0002\u0002\u0002W\u00ff",
    "\u0003\u0002\u0002\u0002Y\u0101\u0003\u0002\u0002\u0002[\u0103\u0003",
    "\u0002\u0002\u0002]\u0105\u0003\u0002\u0002\u0002_\u010b\u0003\u0002",
    "\u0002\u0002a\u0110\u0003\u0002\u0002\u0002cd\u0007<\u0002\u0002de\u0007",
    "<\u0002\u0002e\u0004\u0003\u0002\u0002\u0002fg\u0007*\u0002\u0002g\u0006",
    "\u0003\u0002\u0002\u0002hi\u0007+\u0002\u0002i\b\u0003\u0002\u0002\u0002",
    "jk\u0007~\u0002\u0002k\n\u0003\u0002\u0002\u0002lm\u0007,\u0002\u0002",
    "mn\u0007,\u0002\u0002n\f\u0003\u0002\u0002\u0002op\u0007,\u0002\u0002",
    "p\u000e\u0003\u0002\u0002\u0002qr\u00071\u0002\u0002r\u0010\u0003\u0002",
    "\u0002\u0002st\u0007-\u0002\u0002t\u0012\u0003\u0002\u0002\u0002uv\u0007",
    "/\u0002\u0002v\u0014\u0003\u0002\u0002\u0002wx\u0007o\u0002\u0002xy",
    "\u0007q\u0002\u0002yz\u0007f\u0002\u0002z\u0016\u0003\u0002\u0002\u0002",
    "{|\u0007-\u0002\u0002|}\u00070\u0002\u0002}\u0018\u0003\u0002\u0002",
    "\u0002~\u007f\u0007/\u0002\u0002\u007f\u0080\u00070\u0002\u0002\u0080",
    "\u001a\u0003\u0002\u0002\u0002\u0081\u0082\u0007,\u0002\u0002\u0082",
    "\u0083\u00070\u0002\u0002\u0083\u001c\u0003\u0002\u0002\u0002\u0084",
    "\u0085\u00071\u0002\u0002\u0085\u0086\u00070\u0002\u0002\u0086\u001e",
    "\u0003\u0002\u0002\u0002\u0087\u0088\u0007>\u0002\u0002\u0088 \u0003",
    "\u0002\u0002\u0002\u0089\u008a\u0007>\u0002\u0002\u008a\u008b\u0007",
    "?\u0002\u0002\u008b\"\u0003\u0002\u0002\u0002\u008c\u008d\u0007@\u0002",
    "\u0002\u008d$\u0003\u0002\u0002\u0002\u008e\u008f\u0007@\u0002\u0002",
    "\u008f\u0090\u0007?\u0002\u0002\u0090&\u0003\u0002\u0002\u0002\u0091",
    "\u0092\u0007?\u0002\u0002\u0092(\u0003\u0002\u0002\u0002\u0093\u0094",
    "\u0007>\u0002\u0002\u0094\u0095\u0007@\u0002\u0002\u0095*\u0003\u0002",
    "\u0002\u0002\u0096\u0097\u0007?\u0002\u0002\u0097\u0098\u0007?\u0002",
    "\u0002\u0098,\u0003\u0002\u0002\u0002\u0099\u009a\u0007#\u0002\u0002",
    "\u009a\u009b\u0007?\u0002\u0002\u009b.\u0003\u0002\u0002\u0002\u009c",
    "\u009d\u0007`\u0002\u0002\u009d0\u0003\u0002\u0002\u0002\u009e\u009f",
    "\u0007(\u0002\u0002\u009f\u00a0\u0007(\u0002\u0002\u00a02\u0003\u0002",
    "\u0002\u0002\u00a1\u00a2\u0007~\u0002\u0002\u00a2\u00a3\u0007~\u0002",
    "\u0002\u00a34\u0003\u0002\u0002\u0002\u00a4\u00a5\u0007p\u0002\u0002",
    "\u00a5\u00a6\u0007q\u0002\u0002\u00a6\u00a7\u0007v\u0002\u0002\u00a7",
    "6\u0003\u0002\u0002\u0002\u00a8\u00aa\t\u0002\u0002\u0002\u00a9\u00a8",
    "\u0003\u0002\u0002\u0002\u00aa\u00ab\u0003\u0002\u0002\u0002\u00ab\u00a9",
    "\u0003\u0002\u0002\u0002\u00ab\u00ac\u0003\u0002\u0002\u0002\u00ac8",
    "\u0003\u0002\u0002\u0002\u00ad\u00af\t\u0003\u0002\u0002\u00ae\u00ad",
    "\u0003\u0002\u0002\u0002\u00af\u00b0\u0003\u0002\u0002\u0002\u00b0\u00ae",
    "\u0003\u0002\u0002\u0002\u00b0\u00b1\u0003\u0002\u0002\u0002\u00b1:",
    "\u0003\u0002\u0002\u0002\u00b2\u00b4\t\u0004\u0002\u0002\u00b3\u00b2",
    "\u0003\u0002\u0002\u0002\u00b4\u00b5\u0003\u0002\u0002\u0002\u00b5\u00b3",
    "\u0003\u0002\u0002\u0002\u00b5\u00b6\u0003\u0002\u0002\u0002\u00b6\u00b7",
    "\u0003\u0002\u0002\u0002\u00b7\u00b8\b\u001e\u0002\u0002\u00b8<\u0003",
    "\u0002\u0002\u0002\u00b9\u00ba\u0007)\u0002\u0002\u00ba\u00bb\n\u0005",
    "\u0002\u0002\u00bb\u00bc\u0007)\u0002\u0002\u00bc>\u0003\u0002\u0002",
    "\u0002\u00bd\u00c1\u0007$\u0002\u0002\u00be\u00c0\n\u0006\u0002\u0002",
    "\u00bf\u00be\u0003\u0002\u0002\u0002\u00c0\u00c3\u0003\u0002\u0002\u0002",
    "\u00c1\u00bf\u0003\u0002\u0002\u0002\u00c1\u00c2\u0003\u0002\u0002\u0002",
    "\u00c2\u00c4\u0003\u0002\u0002\u0002\u00c3\u00c1\u0003\u0002\u0002\u0002",
    "\u00c4\u00c5\u0007$\u0002\u0002\u00c5@\u0003\u0002\u0002\u0002\u00c6",
    "\u00c8\u00042;\u0002\u00c7\u00c6\u0003\u0002\u0002\u0002\u00c8\u00c9",
    "\u0003\u0002\u0002\u0002\u00c9\u00c7\u0003\u0002\u0002\u0002\u00c9\u00ca",
    "\u0003\u0002\u0002\u0002\u00ca\u00cb\u0003\u0002\u0002\u0002\u00cb\u00cf",
    "\u00070\u0002\u0002\u00cc\u00ce\u00042;\u0002\u00cd\u00cc\u0003\u0002",
    "\u0002\u0002\u00ce\u00d1\u0003\u0002\u0002\u0002\u00cf\u00cd\u0003\u0002",
    "\u0002\u0002\u00cf\u00d0\u0003\u0002\u0002\u0002\u00d0B\u0003\u0002",
    "\u0002\u0002\u00d1\u00cf\u0003\u0002\u0002\u0002\u00d2\u00d3\u0007v",
    "\u0002\u0002\u00d3\u00d4\u0007t\u0002\u0002\u00d4\u00d5\u0007w\u0002",
    "\u0002\u00d5\u00dc\u0007g\u0002\u0002\u00d6\u00d7\u0007h\u0002\u0002",
    "\u00d7\u00d8\u0007c\u0002\u0002\u00d8\u00d9\u0007n\u0002\u0002\u00d9",
    "\u00da\u0007u\u0002\u0002\u00da\u00dc\u0007g\u0002\u0002\u00db\u00d2",
    "\u0003\u0002\u0002\u0002\u00db\u00d6\u0003\u0002\u0002\u0002\u00dcD",
    "\u0003\u0002\u0002\u0002\u00dd\u00de\u0007k\u0002\u0002\u00de\u00df",
    "\u0007h\u0002\u0002\u00dfF\u0003\u0002\u0002\u0002\u00e0\u00e1\u0007",
    "v\u0002\u0002\u00e1\u00e2\u0007j\u0002\u0002\u00e2\u00e3\u0007g\u0002",
    "\u0002\u00e3\u00e4\u0007p\u0002\u0002\u00e4H\u0003\u0002\u0002\u0002",
    "\u00e5\u00e6\u0007g\u0002\u0002\u00e6\u00e7\u0007n\u0002\u0002\u00e7",
    "\u00e8\u0007u\u0002\u0002\u00e8\u00e9\u0007g\u0002\u0002\u00e9J\u0003",
    "\u0002\u0002\u0002\u00ea\u00eb\u0007h\u0002\u0002\u00eb\u00ec\u0007",
    "w\u0002\u0002\u00ec\u00ed\u0007p\u0002\u0002\u00edL\u0003\u0002\u0002",
    "\u0002\u00ee\u00ef\u0007/\u0002\u0002\u00ef\u00f0\u0007@\u0002\u0002",
    "\u00f0N\u0003\u0002\u0002\u0002\u00f1\u00f2\u0007~\u0002\u0002\u00f2",
    "\u00f3\u0007@\u0002\u0002\u00f3P\u0003\u0002\u0002\u0002\u00f4\u00f5",
    "\u0007n\u0002\u0002\u00f5\u00f6\u0007g\u0002\u0002\u00f6\u00f7\u0007",
    "v\u0002\u0002\u00f7R\u0003\u0002\u0002\u0002\u00f8\u00f9\u0007k\u0002",
    "\u0002\u00f9\u00fa\u0007p\u0002\u0002\u00faT\u0003\u0002\u0002\u0002",
    "\u00fb\u00fc\u0007t\u0002\u0002\u00fc\u00fd\u0007g\u0002\u0002\u00fd",
    "\u00fe\u0007e\u0002\u0002\u00feV\u0003\u0002\u0002\u0002\u00ff\u0100",
    "\u0007]\u0002\u0002\u0100X\u0003\u0002\u0002\u0002\u0101\u0102\u0007",
    "_\u0002\u0002\u0102Z\u0003\u0002\u0002\u0002\u0103\u0104\u0007=\u0002",
    "\u0002\u0104\\\u0003\u0002\u0002\u0002\u0105\u0106\u0007o\u0002\u0002",
    "\u0106\u0107\u0007c\u0002\u0002\u0107\u0108\u0007v\u0002\u0002\u0108",
    "\u0109\u0007e\u0002\u0002\u0109\u010a\u0007j\u0002\u0002\u010a^\u0003",
    "\u0002\u0002\u0002\u010b\u010c\u0007y\u0002\u0002\u010c\u010d\u0007",
    "k\u0002\u0002\u010d\u010e\u0007v\u0002\u0002\u010e\u010f\u0007j\u0002",
    "\u0002\u010f`\u0003\u0002\u0002\u0002\u0110\u0114\t\u0007\u0002\u0002",
    "\u0111\u0113\t\b\u0002\u0002\u0112\u0111\u0003\u0002\u0002\u0002\u0113",
    "\u0116\u0003\u0002\u0002\u0002\u0114\u0112\u0003\u0002\u0002\u0002\u0114",
    "\u0115\u0003\u0002\u0002\u0002\u0115b\u0003\u0002\u0002\u0002\u0116",
    "\u0114\u0003\u0002\u0002\u0002\u000b\u0002\u00ab\u00b0\u00b5\u00c1\u00c9",
    "\u00cf\u00db\u0114\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class MiniOCamlLexer extends antlr4.Lexer {

    static grammarFileName = "MiniOCaml.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'::'", "'('", "')'", "'|'", "'**'", "'*'", 
                         "'/'", "'+'", "'-'", "'mod'", "'+.'", "'-.'", "'*.'", 
                         "'/.'", "'<'", "'<='", "'>'", "'>='", "'='", "'<>'", 
                         "'=='", "'!='", "'^'", "'&&'", "'||'", "'not'", 
                         null, null, null, null, null, null, null, "'if'", 
                         "'then'", "'else'", "'fun'", "'->'", "'|>'", "'let'", 
                         "'in'", "'rec'", "'['", "']'", "';'", "'match'", 
                         "'with'" ];
	static symbolicNames = [ null, null, null, null, null, "POW", "MUL", "DIV", 
                          "ADD", "SUB", "MOD", "ADDFLOAT", "SUBFLOAT", "MULFLOAT", 
                          "DIVFLOAT", "LESSTHAN", "LESSTHANOREQUAL", "GREATERTHAN", 
                          "GREATERTHANOREQUAL", "EQUALSTRUC", "NOTEQUALSTRUC", 
                          "EQUALPHYS", "NOTEQUALPHYS", "CONCAT", "AND", 
                          "OR", "NOT", "NUMBER", "WS", "TOSKIP", "CHAR", 
                          "STRING", "FLOAT", "BOOLEAN", "IF", "THEN", "ELSE", 
                          "FUN", "ARROW", "PIPE", "LET", "IN", "REC", "LISTSTART", 
                          "LISTEND", "SEMICOLON", "MATCH", "WITH", "IDENTIFIER" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "POW", "MUL", "DIV", 
                      "ADD", "SUB", "MOD", "ADDFLOAT", "SUBFLOAT", "MULFLOAT", 
                      "DIVFLOAT", "LESSTHAN", "LESSTHANOREQUAL", "GREATERTHAN", 
                      "GREATERTHANOREQUAL", "EQUALSTRUC", "NOTEQUALSTRUC", 
                      "EQUALPHYS", "NOTEQUALPHYS", "CONCAT", "AND", "OR", 
                      "NOT", "NUMBER", "WS", "TOSKIP", "CHAR", "STRING", 
                      "FLOAT", "BOOLEAN", "IF", "THEN", "ELSE", "FUN", "ARROW", 
                      "PIPE", "LET", "IN", "REC", "LISTSTART", "LISTEND", 
                      "SEMICOLON", "MATCH", "WITH", "IDENTIFIER" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

MiniOCamlLexer.EOF = antlr4.Token.EOF;
MiniOCamlLexer.T__0 = 1;
MiniOCamlLexer.T__1 = 2;
MiniOCamlLexer.T__2 = 3;
MiniOCamlLexer.T__3 = 4;
MiniOCamlLexer.POW = 5;
MiniOCamlLexer.MUL = 6;
MiniOCamlLexer.DIV = 7;
MiniOCamlLexer.ADD = 8;
MiniOCamlLexer.SUB = 9;
MiniOCamlLexer.MOD = 10;
MiniOCamlLexer.ADDFLOAT = 11;
MiniOCamlLexer.SUBFLOAT = 12;
MiniOCamlLexer.MULFLOAT = 13;
MiniOCamlLexer.DIVFLOAT = 14;
MiniOCamlLexer.LESSTHAN = 15;
MiniOCamlLexer.LESSTHANOREQUAL = 16;
MiniOCamlLexer.GREATERTHAN = 17;
MiniOCamlLexer.GREATERTHANOREQUAL = 18;
MiniOCamlLexer.EQUALSTRUC = 19;
MiniOCamlLexer.NOTEQUALSTRUC = 20;
MiniOCamlLexer.EQUALPHYS = 21;
MiniOCamlLexer.NOTEQUALPHYS = 22;
MiniOCamlLexer.CONCAT = 23;
MiniOCamlLexer.AND = 24;
MiniOCamlLexer.OR = 25;
MiniOCamlLexer.NOT = 26;
MiniOCamlLexer.NUMBER = 27;
MiniOCamlLexer.WS = 28;
MiniOCamlLexer.TOSKIP = 29;
MiniOCamlLexer.CHAR = 30;
MiniOCamlLexer.STRING = 31;
MiniOCamlLexer.FLOAT = 32;
MiniOCamlLexer.BOOLEAN = 33;
MiniOCamlLexer.IF = 34;
MiniOCamlLexer.THEN = 35;
MiniOCamlLexer.ELSE = 36;
MiniOCamlLexer.FUN = 37;
MiniOCamlLexer.ARROW = 38;
MiniOCamlLexer.PIPE = 39;
MiniOCamlLexer.LET = 40;
MiniOCamlLexer.IN = 41;
MiniOCamlLexer.REC = 42;
MiniOCamlLexer.LISTSTART = 43;
MiniOCamlLexer.LISTEND = 44;
MiniOCamlLexer.SEMICOLON = 45;
MiniOCamlLexer.MATCH = 46;
MiniOCamlLexer.WITH = 47;
MiniOCamlLexer.IDENTIFIER = 48;



